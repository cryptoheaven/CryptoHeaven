annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
ant.customtasks.libs=JWSAntTasks
application.desc=CryptoHeaven Secure Client
application.homepage=http://cryptoheaven.com
application.title=CryptoHeaven
application.vendor=CryptoHeaven Corp.
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form,**/*.db,**/*.orig,**/*.ini
build.date=${TODAY}
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/CryptoHeaven.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.HTMLEditorPro.jar=../../libraries/HTMLEditorProRetail/HTMLEditorPro.jar
file.reference.javaws.jar=C:\\Program Files (x86)\\Java\\jdk1.7.0_03\\jre\\lib\\javaws.jar
file.reference.mail.jar=../../libraries/javamail-1.4.4/mail.jar
file.reference.plugin.jar=C:\\Program Files (x86)\\Java\\jdk1.7.0_03\\jre\\lib\\plugin.jar
includes=**
jar.archive.disabled=${jnlp.enabled}
jar.compress=true
jar.index=${jnlp.enabled}
javac.classpath=\
    ${file.reference.mail.jar}:\
    ${reference.tiger-i.jar}:\
    ${reference.private-label.jar}:\
    ${file.reference.HTMLEditorPro.jar}:\
    ${libs.toplink.classpath}:\
    ${libs.beans-binding.classpath}
javac.classpath-no-HTMLEditor=\
    ${file.reference.mail.jar}:\
    ${reference.tiger-i.jar}:\
    ${reference.private-label.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.processorpath=\
    ${javac.classpath}
javac.source=1.4
javac.target=1.4
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
javac.test.processorpath=\
    ${javac.test.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
jnlp.applet.class=ch.cl.CryptoHeavenApplet
jnlp.applet.height=50
jnlp.applet.param.0.name=args
jnlp.applet.param.0.value=-username test-some -password-blank -msgLinkId 100649936
jnlp.applet.width=200
jnlp.codebase.type=web
jnlp.codebase.url=$$$$codebase
jnlp.codebase.user=ch
jnlp.descriptor=applet
jnlp.enabled=false
jnlp.icon=C:\\Users\\Marcin\\Documents\\Development\\install4j\\jnlpicon.png
jnlp.lazy.jar.mail.jar=true
jnlp.lazy.jar.tiger-i.jar=true
jnlp.mixed.code=trusted_only
jnlp.offline-allowed=true
jnlp.signed=true
jnlp.signing=generated
jnlp.signing.alias=le-cfcb3809-3ff5-49a6-a1a4-b45b336fab10
jnlp.signing.keystore=C:\\Users\\Marcin\\Documents\\Development\\install4j\\2-sign\\ch-code-signing-2016.pfx
main.class=ch.cl.CryptoHeaven
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
platform.active=default_platform
project.private-label=../private-label
project.tiger-i=../tiger-i
reference.private-label.jar=${project.private-label}/dist/private-label.jar
reference.tiger-i.jar=${project.tiger-i}/dist/tiger-i.jar
run.classpath=\
    ${javac.classpath-no-HTMLEditor}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=-Xms32m -Xmx512m
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
