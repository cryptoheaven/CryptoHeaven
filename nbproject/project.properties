annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.run.all.processors=true
ant.customtasks.libs=JWSAntTasks
application.desc=
application.homepage=http://cryptoheaven.com
application.title=CryptoHeaven
application.vendor=CryptoHeaven Corp.
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form,**/*.db,**/*.orig,**/*.ini
build.date=${TODAY}
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/CryptoHeaven.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.activation.jar=../../libraries/jaf-1.1.1/activation.jar
file.reference.cobra.jar=..\\..\\libraries\\cobra.jar
file.reference.CryptoHeaven-src=src
file.reference.HTMLEditorPro.jar=C:\\Users\\Marcin\\Documents\\Development\\libraries\\HTMLEditorProRetail\\HTMLEditorPro.jar
file.reference.js.jar=..\\..\\libraries\\js.jar
file.reference.mail.jar=..\\..\\libraries\\javamail-1.4.4\\mail.jar
file.reference.tritonus_gsm-0.3.6.zip=../../libraries/tritonus_gsm-0.3.6.zip
file.reference.tritonus_share-0.3.6.zip=../../libraries/tritonus_share-0.3.6.zip
includes=**
jar.compress=true
javac.classpath=\
    ${file.reference.activation.jar}:\
    ${file.reference.mail.jar}:\
    ${reference.tiger-i.jar}:\
    ${reference.private-label.jar}:\
    ${file.reference.HTMLEditorPro.jar}
javac.classpath-no-HTMLEditor=\
    ${file.reference.activation.jar}:\
    ${file.reference.mail.jar}:\
    ${reference.tiger-i.jar}:\
    ${reference.private-label.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.processorpath=\
    ${javac.classpath}
javac.source=1.4
javac.target=1.4
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit.classpath}:\
    ${libs.junit_4.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
jaxbwiz.endorsed.dirs="${netbeans.home}/../ide12/modules/ext/jaxb/api"
jnlp.applet.class=ch.cl.CryptoHeavenApplet
jnlp.applet.height=300
jnlp.applet.width=300
jnlp.codebase.type=user
jnlp.codebase.url=file:/C:/Users/Marcin/Documents/Development/NetBeansProjects/CryptoHeaven/dist/
jnlp.codebase.user=http://www.cryptoheaven.com/direct/
jnlp.descriptor=application
jnlp.enabled=false
jnlp.icon=C:\\Users\\Marcin\\Documents\\Development\\install4j\\KeyIcon48.png
jnlp.offline-allowed=true
jnlp.signed=false
# Property libs.swing-layout.classpath is set here just to make sharing of project simpler.
# The library definition has always preference over this property.
libs.swing-layout.classpath=../../../../../../Program Files/NetBeans 6.0.1/platform7/modules/ext/swing-layout-1.0.3.jar
main.class=ch.cl.CryptoHeaven
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
platform.active=default_platform
project.private-label=../private-label
project.tiger-i=../tiger-i
reference.private-label.jar=${project.private-label}/dist/private-label.jar
reference.tiger-i.jar=${project.tiger-i}/dist/tiger-i.jar
run.classpath=\
    ${javac.classpath-no-HTMLEditor}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=-Xms32m -Xmx384m -Djava.security.policy=applet.policy
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.dir=${file.reference.CryptoHeaven-src}
