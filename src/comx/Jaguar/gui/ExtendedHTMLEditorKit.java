/*GNU General Public LicenseExtendedHTMLEditorKitThis program is free software; you can redistribute it and/ormodify it under the terms of the GNU General Public Licenseas published by the Free Software Foundation; either version 2of the License, or (at your option) any later version.This program is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without even the implied warranty ofMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See theGNU General Public License for more details.You should have received a copy of the GNU General Public Licensealong with this program; if not, write to the Free SoftwareFoundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.*/package comx.Jaguar.gui;import com.CH_co.trace.Trace;import com.CH_guiLib.util.HTML_utils;import javax.swing.text.*;import javax.swing.text.html.*;/**  * This class extends HTMLEditorKit so that it can provide other renderer classes  * instead of the defaults. Most important is the part which renders relative  * image paths.  *  * @author <a href="mailto:jal@grimor.com">Frits Jalvingh</a>  * @version 1.0  */public class ExtendedHTMLEditorKit extends HTMLEditorKit {  /** Method for returning a ViewFactory which handles the image rendering.    */  public ViewFactory getViewFactory() {    return new HTMLFactoryExtended();  }  public Document createDefaultDocument() {    StyleSheet styles = getStyleSheet();    StyleSheet ss = new StyleSheet();    ss.addStyleSheet(styles);    //ss.addRule("body {font-family: Arial, Verdana, Helvetica; font-size: 12pt;}");// font-style: normal; font-weight: normal;}");    MutableHTMLDocument doc = new MutableHTMLDocument(ss);    // Add default font to BODY tag    SimpleAttributeSet as = new SimpleAttributeSet();    as.addAttribute("face", HTML_utils.DEFAULT_FONTS);    doc.addAttributes(doc.getElementByTag(HTML.Tag.BODY), as);    doc.setParser(getParser());    doc.setAsynchronousLoadPriority(4);    doc.setTokenThreshold(100);    return doc;  }/* Inner Classes --------------------------------------------- */  /** Class that replaces the default ViewFactory and supports    * the proper rendering of both URL-based and local images.    */  public class HTMLFactoryExtended extends HTMLFactory implements ViewFactory {    /** Constructor      */    public HTMLFactoryExtended() {    }    /** Method to handle IMG tags and      * invoke the image loader.      */    public View create(Element elem) {      Trace trace = null;  if (Trace.DEBUG) trace = Trace.entry(HTMLFactoryExtended.class, "create(Element elem)");      View view = null;//      Object obj = elem.getAttributes().getAttribute(StyleConstants.NameAttribute);//      if (obj instanceof HTML.Tag) {//        HTML.Tag tagType = (HTML.Tag)obj;//        if (tagType == HTML.Tag.IMG) {//          try {//            if (trace != null) trace.data(10, "Creating our ImageView");//            view = new HTML_ImageView(elem);//          } catch (Throwable t) {//            if (trace != null) trace.exception(HTMLFactoryExtended.class, 100, t);//          }//        }//      }      if (view == null) {        view = super.create(elem);      }      if (trace != null) trace.exit(HTMLFactoryExtended.class, view);      return view;    }  }}